---
layout: post
title:  "AST - Get Familiar with ROSE AST"
author: "@chunhualiao"
date:   2019-08-09
categories: beginner
tags: [rose,ast]
---

This is a tutorial to use a few tools to visualize AST

---

# A. Overview

The goal of this tutorial is to learn how to use a few pre-built tools of ROSE to generate dot graphs of AST.
AST stands for Abstract Syntax Tree, which is the internal tree representation of an input source code. 
Getting familiar with AST is the first step to develop program analysis and translation tools operating on AST.

# B. Obtain Example Codes

Clone the rose-ast git repo
```.term1
git clone https://github.com/chunhualiao/rose-ast.git
```
Enter rose-ast
```.term1
cd rose-ast
```
Change a script which sets the environment variables for using ROSE
```.term1
vim set.rose
```

Please replace ROSE_INS's value to be /opt/install/rose_install

Finally, source it to set the environment variables. 
```.term1
source ./set.rose
```

Test if rose-compiler is in your path
```.term1
which rose-compiler
```

The command line above should generate an output like
```
/opt/install/rose_install/bin/rose-compiler
```

# C. Prepare a few AST tools


# D. Generate dot graph for an input file

# E. Rebuild all dot graphs
rose-ast already stores dot graphs and their pdf and png versions for a set of C/CPP/Fortran files. 
You can browse these files.

There is a makefile within rose-ast. You can use it to rebuild all the files.

Clean up all previously generated dot files.
```.term1
make distclean
```

Rebuild all dot files
```.term1
make all
```

# References

For more information about AST visualization, please check
* https://en.wikibooks.org/wiki/ROSE_Compiler_Framework/How_to_visualize_AST
